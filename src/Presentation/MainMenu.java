package Presentation;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class MainMenu {
    private JButton loadGameButton;
    private JButton newGameButton;
    private JButton scoresButton;
    private JButton instructionsButton;
    private JPanel MainMenuPanel;
    private JButton quitButton;


    public JPanel getMainMenuPanel() {
        return MainMenuPanel;
    }

    public JButton getLoadGameButton() {
        return loadGameButton;
    }

    public JButton getNewGameButton() {
        return newGameButton;
    }

    public JButton getScoresButton() {
        return scoresButton;
    }

    public JButton getQuitButton() {
        return quitButton;
    }

    public void addInstructionsButtonActionListener(ActionListener listener) {
        instructionsButton.addActionListener(listener);
    }

    public void addNewGameButtonActionListener(ActionListener listener) {
        newGameButton.addActionListener(listener);
    }

    public void addLoadGameButtonActionListener(ActionListener listener) {
        loadGameButton.addActionListener(listener);
    }

    public void addScoresButtonActionListener(ActionListener listener) {
        scoresButton.addActionListener(listener);
    }

    public void addQuitButtonActionListener(ActionListener listener) {
        quitButton.addActionListener(listener);
    }

    public JButton getInstructionsButton() {
        return instructionsButton;
    }

    public MainMenu() {

    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        MainMenuPanel = new JPanel();
        MainMenuPanel.setLayout(new GridBagLayout());
        MainMenuPanel.setBackground(new Color(-12501697));
        MainMenuPanel.setForeground(new Color(-12514753));
        MainMenuPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), "Mastermind", TitledBorder.CENTER, TitledBorder.BELOW_TOP, this.$$$getFont$$$("DejaVu Sans Mono", Font.BOLD | Font.ITALIC, 28, MainMenuPanel.getFont()), new Color(-4737097)));
        newGameButton = new JButton();
        newGameButton.setText("New Game");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 0, 35, 0);
        MainMenuPanel.add(newGameButton, gbc);
        scoresButton = new JButton();
        scoresButton.setText("Scores");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 0, 35, 0);
        MainMenuPanel.add(scoresButton, gbc);
        instructionsButton = new JButton();
        instructionsButton.setText("Instructions");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 7;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 0, 35, 0);
        MainMenuPanel.add(instructionsButton, gbc);
        loadGameButton = new JButton();
        loadGameButton.setEnabled(true);
        loadGameButton.setText("Load Game");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(30, 0, 35, 0);
        MainMenuPanel.add(loadGameButton, gbc);
        quitButton = new JButton();
        quitButton.setText("Quit");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 9;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 0, 30, 0);
        MainMenuPanel.add(quitButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return MainMenuPanel;
    }
}



