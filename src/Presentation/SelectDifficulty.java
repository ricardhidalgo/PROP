package Presentation;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionListener;

public class SelectDifficulty {
    private JButton easyButton;
    private JButton mediumButton;
    private JButton hardButton;
    private JButton customButton;
    private JButton backButton;
    private JPanel SelectDifficultyPanel;

    public JPanel getSelectDifficultyPanel() {
        return SelectDifficultyPanel;
    }

    public JButton getEasyButton() {
        return easyButton;
    }

    public JButton getMediumButton() {
        return mediumButton;
    }

    public JButton getHardButton() {
        return hardButton;
    }

    public JButton getCustomButton() {
        return customButton;
    }

    public JButton getBackButton() {
        return backButton;
    }

    public void addEasyButtonActionListener(ActionListener listener) {
        easyButton.addActionListener(listener);
    }

    public void addMediumButtonActionListener(ActionListener listener) {
        mediumButton.addActionListener(listener);
    }

    public void addHardButtonActionListener(ActionListener listener) {
        hardButton.addActionListener(listener);
    }

    public void addCustomButtonActionListener(ActionListener listener) {
        customButton.addActionListener(listener);
    }

    public void addBackButtonActionListener(ActionListener listener) {
        backButton.addActionListener(listener);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        SelectDifficultyPanel = new JPanel();
        SelectDifficultyPanel.setLayout(new GridBagLayout());
        SelectDifficultyPanel.setBackground(new Color(-12501697));
        SelectDifficultyPanel.setToolTipText("Mastermind");
        SelectDifficultyPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), "Mastermind", TitledBorder.CENTER, TitledBorder.BELOW_TOP, this.$$$getFont$$$("DejaVu Sans Mono", Font.BOLD | Font.ITALIC, 28, SelectDifficultyPanel.getFont()), new Color(-4737097)));
        easyButton = new JButton();
        easyButton.setText("Easy");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weightx = 0.1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        SelectDifficultyPanel.add(easyButton, gbc);
        mediumButton = new JButton();
        mediumButton.setText("Medium");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        SelectDifficultyPanel.add(mediumButton, gbc);
        hardButton = new JButton();
        hardButton.setText("Hard");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        SelectDifficultyPanel.add(hardButton, gbc);
        customButton = new JButton();
        customButton.setText("Custom");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 7;
        gbc.fill = GridBagConstraints.BOTH;
        SelectDifficultyPanel.add(customButton, gbc);
        final JSeparator separator1 = new JSeparator();
        separator1.setBackground(new Color(-12501697));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 8;
        gbc.weighty = 0.1;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 0, 0, 80);
        SelectDifficultyPanel.add(separator1, gbc);
        final JSeparator separator2 = new JSeparator();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 8;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 80, 0, 0);
        SelectDifficultyPanel.add(separator2, gbc);
        final JSeparator separator3 = new JSeparator();
        separator3.setBackground(new Color(-12501697));
        separator3.setEnabled(false);
        separator3.setForeground(new Color(-12501697));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(35, 0, 0, 0);
        SelectDifficultyPanel.add(separator3, gbc);
        final JSeparator separator4 = new JSeparator();
        separator4.setBackground(new Color(-12501697));
        separator4.setEnabled(false);
        separator4.setForeground(new Color(-12501697));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(35, 0, 0, 0);
        SelectDifficultyPanel.add(separator4, gbc);
        final JSeparator separator5 = new JSeparator();
        separator5.setBackground(new Color(-12501697));
        separator5.setEnabled(false);
        separator5.setForeground(new Color(-12501697));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(35, 0, 0, 0);
        SelectDifficultyPanel.add(separator5, gbc);
        final JSeparator separator6 = new JSeparator();
        separator6.setBackground(new Color(-12501697));
        separator6.setEnabled(false);
        separator6.setForeground(new Color(-12501697));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 8;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(30, 0, 0, 0);
        SelectDifficultyPanel.add(separator6, gbc);
        backButton = new JButton();
        backButton.setText("Back");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 9;
        gbc.anchor = GridBagConstraints.SOUTHEAST;
        gbc.insets = new Insets(0, 0, 5, 5);
        SelectDifficultyPanel.add(backButton, gbc);
        final JSeparator separator7 = new JSeparator();
        separator7.setBackground(new Color(-12501697));
        separator7.setEnabled(false);
        separator7.setForeground(new Color(-12501697));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 0, 30, 0);
        SelectDifficultyPanel.add(separator7, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return SelectDifficultyPanel;
    }
}
