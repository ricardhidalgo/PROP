package Presentation;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionListener;

public class LoadGame {

    private JPanel LoadGamePanel;
    private JButton saveSlot1Button;
    private JButton saveSlot2Button;
    private JButton saveSlot3Button;
    private JButton backButton;

    public JPanel getLoadGamePanel() {
        return LoadGamePanel;
    }

    public JButton getSaveSlot1Button() {
        return saveSlot1Button;
    }

    public JButton getSaveSlot2Button() {
        return saveSlot2Button;
    }

    public JButton getSaveSlot3Button() {
        return saveSlot3Button;
    }

    public JButton getBackButton() {
        return backButton;
    }

    public void addSaveSlot1ButtonActionListener(ActionListener listener) {
        saveSlot1Button.addActionListener(listener);
    }

    public void addSaveSlot2ButtonActionListener(ActionListener listener) {
        saveSlot1Button.addActionListener(listener);
    }

    public void addSaveSlot3ButtonActionListener(ActionListener listener) {
        saveSlot1Button.addActionListener(listener);
    }

    public void addBackButtonActionListener(ActionListener listener) {
        backButton.addActionListener(listener);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        LoadGamePanel = new JPanel();
        LoadGamePanel.setLayout(new GridBagLayout());
        LoadGamePanel.setBackground(new Color(-12501697));
        LoadGamePanel.setForeground(new Color(-4737097));
        LoadGamePanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), "Mastermind", TitledBorder.CENTER, TitledBorder.BELOW_TOP, this.$$$getFont$$$("DejaVu Sans Mono", Font.BOLD | Font.ITALIC, 28, LoadGamePanel.getFont()), new Color(-4737097)));
        saveSlot1Button = new JButton();
        saveSlot1Button.setEnabled(false);
        saveSlot1Button.setText("Save Slot 1");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        LoadGamePanel.add(saveSlot1Button, gbc);
        saveSlot2Button = new JButton();
        saveSlot2Button.setEnabled(false);
        saveSlot2Button.setText("Save Slot 2");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.weightx = 0.1;
        gbc.fill = GridBagConstraints.BOTH;
        LoadGamePanel.add(saveSlot2Button, gbc);
        saveSlot3Button = new JButton();
        saveSlot3Button.setEnabled(false);
        saveSlot3Button.setText("Save Slot 3");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.BOTH;
        LoadGamePanel.add(saveSlot3Button, gbc);
        final JSeparator separator1 = new JSeparator();
        separator1.setBackground(new Color(-12501697));
        separator1.setEnabled(false);
        separator1.setForeground(new Color(-12501697));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 0, 35, 0);
        LoadGamePanel.add(separator1, gbc);
        final JSeparator separator2 = new JSeparator();
        separator2.setBackground(new Color(-12501697));
        separator2.setEnabled(false);
        separator2.setForeground(new Color(-12501697));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 0, 35, 0);
        LoadGamePanel.add(separator2, gbc);
        final JSeparator separator3 = new JSeparator();
        separator3.setEnabled(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(35, 0, 0, 0);
        LoadGamePanel.add(separator3, gbc);
        backButton = new JButton();
        backButton.setText("Back");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 7;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.SOUTHEAST;
        gbc.insets = new Insets(0, 0, 5, 5);
        LoadGamePanel.add(backButton, gbc);
        final JSeparator separator4 = new JSeparator();
        separator4.setEnabled(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 0, 0, 80);
        LoadGamePanel.add(separator4, gbc);
        final JSeparator separator5 = new JSeparator();
        separator5.setEnabled(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 6;
        gbc.weighty = 10.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 0, 0, 80);
        LoadGamePanel.add(separator5, gbc);
        final JSeparator separator6 = new JSeparator();
        separator6.setEnabled(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 0, 30, 0);
        LoadGamePanel.add(separator6, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return LoadGamePanel;
    }
}
